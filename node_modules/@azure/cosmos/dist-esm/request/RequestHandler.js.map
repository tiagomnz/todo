{"version":3,"file":"RequestHandler.js","sourceRoot":"","sources":["../../src/request/RequestHandler.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport AbortController from \"node-abort-controller\";\nimport {\n  createPipelineRequest,\n  createHttpHeaders,\n  PipelineResponse\n} from \"@azure/core-rest-pipeline\";\nimport { trimSlashes } from \"../common\";\nimport { Constants } from \"../common/constants\";\nimport { logger } from \"../common/logger\";\nimport { executePlugins, PluginOn } from \"../plugins/Plugin\";\nimport * as RetryUtility from \"../retry/retryUtility\";\nimport { defaultHttpAgent, defaultHttpsAgent } from \"./defaultAgent\";\nimport { ErrorResponse } from \"./ErrorResponse\";\nimport { bodyFromData } from \"./request\";\nimport { RequestContext } from \"./RequestContext\";\nimport { Response as CosmosResponse } from \"./Response\";\nimport { TimeoutError } from \"./TimeoutError\";\nimport { URL } from \"../utils/url\";\nimport { getCachedDefaultHttpClient } from \"../utils/cachedClient\";\n\n/** @hidden */\nconst log = logger(\"RequestHandler\");\n\nasync function executeRequest(requestContext: RequestContext): Promise<CosmosResponse<any>> {\n  return executePlugins(requestContext, httpRequest, PluginOn.request);\n}\n\n/**\n * @hidden\n */\nasync function httpRequest(\n  requestContext: RequestContext\n): Promise<{\n  headers: any;\n  result: any;\n  code: number;\n  substatus: number;\n}> {\n  const controller = new AbortController();\n  const signal = controller.signal;\n\n  // Wrap users passed abort events and call our own internal abort()\n  const userSignal = requestContext.options && requestContext.options.abortSignal;\n  if (userSignal) {\n    if (userSignal.aborted) {\n      controller.abort();\n    } else {\n      userSignal.addEventListener(\"abort\", () => {\n        controller.abort();\n      });\n    }\n  }\n\n  const timeout = setTimeout(() => {\n    controller.abort();\n  }, requestContext.connectionPolicy.requestTimeout);\n\n  let response: PipelineResponse;\n\n  if (requestContext.body) {\n    requestContext.body = bodyFromData(requestContext.body);\n  }\n\n  const httpsClient = getCachedDefaultHttpClient();\n  const url = trimSlashes(requestContext.endpoint) + requestContext.path;\n  const reqHeaders = createHttpHeaders(requestContext.headers as any);\n  const pipelineRequest = createPipelineRequest({\n    url,\n    headers: reqHeaders,\n    method: requestContext.method,\n    abortSignal: signal,\n    body: requestContext.body\n  });\n  if (requestContext.requestAgent) {\n    pipelineRequest.agent = requestContext.requestAgent;\n  } else {\n    const parsedUrl = new URL(url);\n    pipelineRequest.agent = parsedUrl.protocol === \"http\" ? defaultHttpAgent : defaultHttpsAgent;\n  }\n\n  try {\n    response = await httpsClient.sendRequest(pipelineRequest);\n  } catch (error) {\n    if (error.name === \"AbortError\") {\n      // If the user passed signal caused the abort, cancel the timeout and rethrow the error\n      if (userSignal && userSignal.aborted === true) {\n        clearTimeout(timeout);\n        throw error;\n      }\n      // If the user didn't cancel, it must be an abort we called due to timeout\n      throw new TimeoutError();\n    }\n    throw error;\n  }\n\n  clearTimeout(timeout);\n\n  const result =\n    response.status === 204 || response.status === 304 ? null : JSON.parse(response.bodyAsText);\n  const headers = response.headers.toJSON();\n\n  const substatus = headers[Constants.HttpHeaders.SubStatus]\n    ? parseInt(headers[Constants.HttpHeaders.SubStatus], 10)\n    : undefined;\n\n  if (response.status >= 400) {\n    const errorResponse: ErrorResponse = new Error(result.message);\n\n    log.warn(\n      response.status +\n        \" \" +\n        requestContext.endpoint +\n        \" \" +\n        requestContext.path +\n        \" \" +\n        result.message\n    );\n\n    errorResponse.code = response.status;\n    errorResponse.body = result;\n    errorResponse.headers = headers;\n\n    if (Constants.HttpHeaders.ActivityId in headers) {\n      errorResponse.activityId = headers[Constants.HttpHeaders.ActivityId];\n    }\n\n    if (Constants.HttpHeaders.SubStatus in headers) {\n      errorResponse.substatus = substatus;\n    }\n\n    if (Constants.HttpHeaders.RetryAfterInMs in headers) {\n      errorResponse.retryAfterInMs = parseInt(headers[Constants.HttpHeaders.RetryAfterInMs], 10);\n      Object.defineProperty(errorResponse, \"retryAfterInMilliseconds\", {\n        get: () => {\n          return errorResponse.retryAfterInMs;\n        }\n      });\n    }\n\n    throw errorResponse;\n  }\n  return {\n    headers,\n    result,\n    code: response.status,\n    substatus\n  };\n}\n\n/**\n * @hidden\n */\nexport async function request<T>(requestContext: RequestContext): Promise<CosmosResponse<T>> {\n  if (requestContext.body) {\n    requestContext.body = bodyFromData(requestContext.body);\n    if (!requestContext.body) {\n      throw new Error(\"parameter data must be a javascript object, string, or Buffer\");\n    }\n  }\n\n  return RetryUtility.execute({\n    requestContext,\n    executeRequest\n  });\n}\n"]}